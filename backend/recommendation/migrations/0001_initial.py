# Generated by Django 4.2.24 on 2025-09-21 13:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('skills', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du poste')),
                ('company', models.CharField(max_length=200, verbose_name='Entreprise')),
                ('description', models.TextField(verbose_name='Description')),
                ('requirements', models.TextField(verbose_name='Exigences')),
                ('responsibilities', models.TextField(verbose_name='Responsabilités')),
                ('job_type', models.CharField(choices=[('CDI', 'CDI'), ('CDD', 'CDD'), ('Stage', 'Stage'), ('Freelance', 'Freelance'), ('Alternance', 'Alternance'), ('Temps partiel', 'Temps partiel')], max_length=20, verbose_name='Type de contrat')),
                ('seniority', models.CharField(choices=[('junior', 'Junior (0-2 ans)'), ('mid', 'Mid-level (2-5 ans)'), ('senior', 'Senior (5-10 ans)'), ('lead', 'Lead/Expert (10+ ans)')], max_length=20, verbose_name="Niveau d'expérience")),
                ('location', models.CharField(max_length=200, verbose_name='Localisation')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('remote', models.BooleanField(default=False, verbose_name='Télétravail possible')),
                ('salary_min', models.IntegerField(blank=True, null=True, verbose_name='Salaire minimum (MAD)')),
                ('salary_max', models.IntegerField(blank=True, null=True, verbose_name='Salaire maximum (MAD)')),
                ('salary_currency', models.CharField(default='MAD', max_length=3, verbose_name='Devise')),
                ('tags', models.JSONField(default=list, verbose_name='Tags')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('closed', 'Closed'), ('draft', 'Draft')], default='active', max_length=20, verbose_name='Statut')),
                ('posted_at', models.DateTimeField(auto_now_add=True, verbose_name='Publié le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expire le')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Email de contact')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone de contact')),
                ('benefits', models.TextField(blank=True, verbose_name='Avantages')),
                ('company_size', models.CharField(blank=True, max_length=50, verbose_name="Taille de l'entreprise")),
                ('industry', models.CharField(blank=True, max_length=100, verbose_name="Secteur d'activité")),
                ('preferred_skills', models.ManyToManyField(blank=True, related_name='preferred_jobs', to='skills.skill', verbose_name='Compétences préférées')),
                ('required_skills', models.ManyToManyField(related_name='required_jobs', to='skills.skill', verbose_name='Compétences requises')),
            ],
            options={
                'verbose_name': "Offre d'emploi",
                'verbose_name_plural': "Offres d'emploi",
                'ordering': ['-posted_at'],
            },
        ),
        migrations.CreateModel(
            name='UserJobPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_cities', models.JSONField(default=list, verbose_name='Villes préférées')),
                ('preferred_countries', models.JSONField(default=list, verbose_name='Pays préférés')),
                ('accepts_remote', models.BooleanField(default=True, verbose_name='Accepte le télétravail')),
                ('preferred_job_types', models.JSONField(default=list, verbose_name='Types de contrat préférés')),
                ('preferred_seniority', models.CharField(blank=True, choices=[('junior', 'Junior (0-2 ans)'), ('mid', 'Mid-level (2-5 ans)'), ('senior', 'Senior (5-10 ans)'), ('lead', 'Lead/Expert (10+ ans)')], max_length=20, verbose_name="Niveau d'expérience préféré")),
                ('target_salary_min', models.IntegerField(blank=True, null=True, verbose_name='Salaire minimum cible (MAD)')),
                ('target_salary_max', models.IntegerField(blank=True, null=True, verbose_name='Salaire maximum cible (MAD)')),
                ('salary_currency', models.CharField(default='MAD', max_length=3, verbose_name='Devise préférée')),
                ('skill_weights', models.JSONField(default=dict, verbose_name='Poids des compétences')),
                ('preferred_industries', models.JSONField(default=list, verbose_name='Secteurs préférés')),
                ('preferred_company_sizes', models.JSONField(default=list, verbose_name="Tailles d'entreprise préférées")),
                ('max_recommendations', models.IntegerField(default=10, verbose_name='Nombre maximum de recommandations')),
                ('min_score_threshold', models.FloatField(default=50.0, verbose_name='Score minimum pour recommandation')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('preferred_skills', models.ManyToManyField(blank=True, to='skills.skill', verbose_name='Compétences préférées')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Préférences d'emploi",
                'verbose_name_plural': "Préférences d'emploi",
            },
        ),
        migrations.CreateModel(
            name='JobRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_score', models.FloatField(verbose_name='Score global')),
                ('skill_match_score', models.FloatField(verbose_name='Score de correspondance des compétences')),
                ('salary_fit_score', models.FloatField(verbose_name="Score d'adéquation salariale")),
                ('location_match_score', models.FloatField(verbose_name='Score de correspondance de localisation')),
                ('seniority_match_score', models.FloatField(verbose_name="Score de correspondance d'expérience")),
                ('remote_bonus', models.FloatField(default=0, verbose_name='Bonus télétravail')),
                ('matched_skills', models.JSONField(default=list, verbose_name='Compétences correspondantes')),
                ('missing_skills', models.JSONField(default=list, verbose_name='Compétences manquantes')),
                ('recommendation_reason', models.TextField(blank=True, verbose_name='Raison de la recommandation')),
                ('status', models.CharField(choices=[('new', 'Nouveau'), ('viewed', 'Consulté'), ('applied', 'Candidaté'), ('interested', 'Intéressé'), ('not_interested', 'Pas intéressé')], default='new', max_length=20, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skills.candidateprofile', verbose_name='Candidat')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommendation.joboffer', verbose_name="Offre d'emploi")),
            ],
            options={
                'verbose_name': "Recommandation d'emploi",
                'verbose_name_plural': "Recommandations d'emploi",
                'ordering': ['-overall_score', '-created_at'],
                'unique_together': {('candidate', 'job')},
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(blank=True, verbose_name='Lettre de motivation')),
                ('status', models.CharField(choices=[('applied', 'Candidature envoyée'), ('under_review', "En cours d'examen"), ('shortlisted', 'Présélectionné'), ('interview_scheduled', 'Entretien programmé'), ('interviewed', 'Entretien passé'), ('rejected', 'Rejeté'), ('accepted', 'Accepté'), ('withdrawn', 'Retiré')], default='applied', max_length=30, verbose_name='Statut')),
                ('applied_at', models.DateTimeField(auto_now_add=True, verbose_name='Candidaté le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skills.candidateprofile', verbose_name='Candidat')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommendation.joboffer', verbose_name="Offre d'emploi")),
                ('recommendation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recommendation.jobrecommendation', verbose_name='Recommandation associée')),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'ordering': ['-applied_at'],
                'unique_together': {('candidate', 'job')},
            },
        ),
    ]
