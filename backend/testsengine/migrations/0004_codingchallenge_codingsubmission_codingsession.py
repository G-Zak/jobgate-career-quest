# Generated by Django 5.1.7 on 2025-09-09 02:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('testsengine', '0003_question_base_image_id_question_complexity_score_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CodingChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('category', models.CharField(choices=[('algorithms', 'Algorithms'), ('data_structures', 'Data Structures'), ('string_manipulation', 'String Manipulation'), ('mathematics', 'Mathematics'), ('dynamic_programming', 'Dynamic Programming'), ('recursion', 'Recursion'), ('sorting_searching', 'Sorting & Searching'), ('graph_theory', 'Graph Theory'), ('web_development', 'Web Development'), ('database', 'Database')], max_length=30)),
                ('language', models.CharField(choices=[('python', 'Python'), ('javascript', 'JavaScript'), ('java', 'Java'), ('cpp', 'C++'), ('csharp', 'C#'), ('go', 'Go'), ('rust', 'Rust')], max_length=20)),
                ('problem_statement', models.TextField()),
                ('input_format', models.TextField(blank=True, null=True)),
                ('output_format', models.TextField(blank=True, null=True)),
                ('constraints', models.TextField(blank=True, null=True)),
                ('starter_code', models.TextField(blank=True, null=True)),
                ('solution_code', models.TextField(blank=True, null=True)),
                ('test_cases', models.JSONField(default=list)),
                ('max_points', models.IntegerField(default=100)),
                ('time_limit_seconds', models.IntegerField(default=2)),
                ('memory_limit_mb', models.IntegerField(default=128)),
                ('tags', models.JSONField(default=list)),
                ('estimated_time_minutes', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['difficulty', 'title'],
            },
        ),
        migrations.CreateModel(
            name='CodingSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('accepted', 'Accepted'), ('wrong_answer', 'Wrong Answer'), ('compilation_error', 'Compilation Error'), ('runtime_error', 'Runtime Error'), ('time_limit_exceeded', 'Time Limit Exceeded'), ('memory_limit_exceeded', 'Memory Limit Exceeded')], default='pending', max_length=30)),
                ('score', models.IntegerField(default=0)),
                ('tests_passed', models.IntegerField(default=0)),
                ('total_tests', models.IntegerField(default=0)),
                ('execution_time_ms', models.IntegerField(default=0)),
                ('memory_used_mb', models.FloatField(default=0.0)),
                ('test_results', models.JSONField(default=list)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('compilation_output', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testsengine.codingchallenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='CodingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='active', max_length=20)),
                ('current_code', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('completion_time', models.DateTimeField(blank=True, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testsengine.codingchallenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('best_submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='best_for_session', to='testsengine.codingsubmission')),
            ],
            options={
                'ordering': ['-last_activity'],
                'unique_together': {('user', 'challenge')},
            },
        ),
    ]
