# Generated by Django 4.2.24 on 2025-09-19 00:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("testsengine", "0007_testsubmission_score_answer_and_more"),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="answer",
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name="score",
            name="scoring_version",
        ),
        migrations.RemoveField(
            model_name="testsubmission",
            name="session",
        ),
        migrations.AddField(
            model_name="answer",
            name="points_awarded",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Points awarded based on difficulty coefficient",
                max_digits=5,
            ),
        ),
        migrations.AddField(
            model_name="test",
            name="max_possible_score",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Maximum possible score using difficulty coefficients",
                max_digits=8,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="test",
            name="version",
            field=models.CharField(
                default="1.0",
                help_text="Test version for tracking changes",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="testsubmission",
            name="scored_at",
            field=models.DateTimeField(
                blank=True, help_text="When the submission was scored", null=True
            ),
        ),
        migrations.AddField(
            model_name="testsubmission",
            name="scoring_version",
            field=models.CharField(
                default="1.0",
                help_text="Version of scoring algorithm used",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="answer",
            name="is_correct",
            field=models.BooleanField(help_text="Whether the answer is correct"),
        ),
        migrations.AlterField(
            model_name="answer",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_answers",
                to="testsengine.question",
            ),
        ),
        migrations.AlterField(
            model_name="answer",
            name="time_taken_seconds",
            field=models.PositiveIntegerField(
                default=0, help_text="Time taken to answer this specific question"
            ),
        ),
        migrations.AlterField(
            model_name="question",
            name="complexity_score",
            field=models.PositiveIntegerField(
                default=1, help_text="1-5 visual complexity rating"
            ),
        ),
        migrations.AlterField(
            model_name="question",
            name="correct_answer",
            field=models.CharField(
                db_index=True,
                help_text="Correct answer (A, B, C, D, etc.)",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="question",
            name="difficulty_level",
            field=models.CharField(
                choices=[
                    ("easy", "Easy (Coefficient: 1.0)"),
                    ("medium", "Medium (Coefficient: 1.5)"),
                    ("hard", "Hard (Coefficient: 2.0)"),
                ],
                db_index=True,
                default="medium",
                help_text="Determines scoring coefficient: Easy=1.0, Medium=1.5, Hard=2.0",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="question",
            name="options",
            field=models.JSONField(help_text="Store options as JSON array"),
        ),
        migrations.AlterField(
            model_name="question",
            name="order",
            field=models.PositiveIntegerField(
                help_text="Order of question within the test"
            ),
        ),
        migrations.AlterField(
            model_name="question",
            name="question_type",
            field=models.CharField(
                choices=[
                    ("reading_comprehension", "Reading Comprehension"),
                    ("vocabulary", "Vocabulary in Context"),
                    ("logical_deduction", "Logical Deduction from Text"),
                    ("critical_reasoning", "Critical Reasoning"),
                    ("analogies", "Analogies and Relationships"),
                    ("mental_rotation", "Mental Rotation"),
                    ("paper_folding", "Paper Folding/Unfolding"),
                    ("cross_sections", "Cross-sections Identification"),
                    ("spatial_transformation", "Spatial Transformation"),
                    ("perspective_changes", "Perspective Changes"),
                    ("multiple_choice", "Multiple Choice"),
                    ("situational_judgment", "Situational Judgment"),
                ],
                db_index=True,
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="average_time_per_question",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Average time per question in seconds",
                max_digits=6,
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="correct_answers",
            field=models.PositiveIntegerField(help_text="Number of correct answers"),
        ),
        migrations.AlterField(
            model_name="score",
            name="easy_correct",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="score",
            name="easy_score",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Score from easy questions (coefficient 1.0)",
                max_digits=6,
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="fastest_question_time",
            field=models.PositiveIntegerField(
                help_text="Fastest question time in seconds"
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="hard_correct",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="score",
            name="hard_score",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Score from hard questions (coefficient 2.0)",
                max_digits=6,
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="max_possible_score",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Maximum possible points for this test",
                max_digits=8,
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="medium_correct",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="score",
            name="medium_score",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Score from medium questions (coefficient 1.5)",
                max_digits=6,
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="metadata",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Additional scoring data and metrics",
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="percentage_score",
            field=models.DecimalField(
                decimal_places=2, help_text="Percentage score (0-100)", max_digits=5
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="raw_score",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Total points earned using difficulty coefficients",
                max_digits=8,
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="scoring_algorithm",
            field=models.CharField(
                default="difficulty_weighted",
                help_text="Algorithm used for scoring",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="slowest_question_time",
            field=models.PositiveIntegerField(
                help_text="Slowest question time in seconds"
            ),
        ),
        migrations.AlterField(
            model_name="score",
            name="total_questions",
            field=models.PositiveIntegerField(help_text="Total number of questions"),
        ),
        migrations.AlterField(
            model_name="test",
            name="duration_minutes",
            field=models.PositiveIntegerField(
                default=20,
                help_text="Fixed duration in minutes (20 minutes for all tests)",
            ),
        ),
        migrations.AlterField(
            model_name="test",
            name="is_active",
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name="test",
            name="passing_score",
            field=models.PositiveIntegerField(
                default=70, help_text="Minimum percentage score to pass"
            ),
        ),
        migrations.AlterField(
            model_name="test",
            name="test_type",
            field=models.CharField(
                choices=[
                    ("verbal_reasoning", "Verbal Reasoning"),
                    ("numerical_reasoning", "Numerical Reasoning"),
                    ("logical_reasoning", "Logical Reasoning"),
                    ("abstract_reasoning", "Abstract Reasoning"),
                    ("spatial_reasoning", "Spatial Reasoning"),
                    ("situational_judgment", "Situational Judgment"),
                    ("technical", "Technical"),
                ],
                db_index=True,
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="test",
            name="title",
            field=models.CharField(db_index=True, max_length=200),
        ),
        migrations.AlterField(
            model_name="test",
            name="total_questions",
            field=models.PositiveIntegerField(
                help_text="Total number of questions in this test"
            ),
        ),
        migrations.AlterField(
            model_name="testsubmission",
            name="answers_data",
            field=models.JSONField(
                default=dict, help_text="Raw answers from frontend for backup/debugging"
            ),
        ),
        migrations.AlterField(
            model_name="testsubmission",
            name="is_complete",
            field=models.BooleanField(
                default=True, help_text="Whether all questions were answered"
            ),
        ),
        migrations.AlterField(
            model_name="testsubmission",
            name="time_taken_seconds",
            field=models.PositiveIntegerField(
                help_text="Total time taken to complete the test"
            ),
        ),
        migrations.AddIndex(
            model_name="question",
            index=models.Index(
                fields=["test", "order"], name="testsengine_test_id_2bd618_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="question",
            index=models.Index(
                fields=["test", "difficulty_level"],
                name="testsengine_test_id_846e7c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="question",
            index=models.Index(
                fields=["question_type", "difficulty_level"],
                name="testsengine_questio_58944f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="test",
            index=models.Index(
                fields=["test_type", "is_active"], name="testsengine_test_ty_8cd7c7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="test",
            index=models.Index(
                fields=["is_active", "created_at"],
                name="testsengine_is_acti_cac403_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="testsubmission",
            index=models.Index(
                fields=["test", "submitted_at"], name="testsengine_test_id_4d9b3c_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="answer",
            constraint=models.UniqueConstraint(
                fields=("submission", "question"),
                name="unique_submission_question_answer",
            ),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.UniqueConstraint(
                fields=("test", "order"), name="unique_test_question_order"
            ),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.CheckConstraint(
                check=models.Q(("order__gt", 0)), name="positive_question_order"
            ),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("complexity_score__gte", 1), ("complexity_score__lte", 5)
                ),
                name="valid_complexity_score",
            ),
        ),
        migrations.AddConstraint(
            model_name="test",
            constraint=models.CheckConstraint(
                check=models.Q(("total_questions__gt", 0)),
                name="positive_total_questions",
            ),
        ),
        migrations.AddConstraint(
            model_name="test",
            constraint=models.CheckConstraint(
                check=models.Q(("duration_minutes__gt", 0)), name="positive_duration"
            ),
        ),
        migrations.AddConstraint(
            model_name="test",
            constraint=models.CheckConstraint(
                check=models.Q(("passing_score__gte", 0), ("passing_score__lte", 100)),
                name="valid_passing_score",
            ),
        ),
        migrations.AddConstraint(
            model_name="testsubmission",
            constraint=models.UniqueConstraint(
                fields=("user", "test"), name="unique_user_test_submission"
            ),
        ),
    ]
