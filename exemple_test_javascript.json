{
  "test_name": "Test JavaScript Moderne",
  "description": "Évaluation des connaissances en JavaScript ES6+, async/await, et manipulation du DOM",
  "skill_name": "JavaScript",
  "time_limit": 25,
  "difficulty": "intermediate",
  "questions": [
    {
      "question_text": "Quelle est la différence entre 'let' et 'var' en JavaScript ?",
      "option_a": "let a une portée de bloc, var a une portée de fonction",
      "option_b": "let est plus rapide que var",
      "option_c": "Il n'y a pas de différence",
      "option_d": "let ne peut pas être redéclaré",
      "correct_answer": "a",
      "points": 4
    },
    {
      "question_text": "Comment déclarer une fonction fléchée qui retourne le carré d'un nombre ?",
      "option_a": "const square = (x) => { return x * x }",
      "option_b": "const square = x => x * x",
      "option_c": "const square = (x) => x * x",
      "option_d": "Toutes les réponses ci-dessus",
      "correct_answer": "d",
      "points": 3
    },
    {
      "question_text": "Que fait la méthode Array.map() ?",
      "option_a": "Modifie le tableau original",
      "option_b": "Crée un nouveau tableau avec les résultats d'une fonction",
      "option_c": "Filtre les éléments du tableau",
      "option_d": "Trie le tableau",
      "correct_answer": "b",
      "points": 4
    },
    {
      "question_text": "Comment gérer une promesse avec async/await ?",
      "option_a": "async function() { const result = await promise }",
      "option_b": "function async() { const result = await promise }",
      "option_c": "async function() { const result = promise.await() }",
      "option_d": "function() { const result = async await promise }",
      "correct_answer": "a",
      "points": 5
    },
    {
      "question_text": "Quelle méthode permet de fusionner des tableaux en JavaScript ?",
      "option_a": "Array.join()",
      "option_b": "Array.concat()",
      "option_c": "Spread operator (...)",
      "option_d": "concat() et spread operator",
      "correct_answer": "d",
      "points": 4
    },
    {
      "question_text": "Comment déstructurer un objet en JavaScript ?",
      "option_a": "const [name, age] = person",
      "option_b": "const {name, age} = person",
      "option_c": "const name, age = person",
      "option_d": "const (name, age) = person",
      "correct_answer": "b",
      "points": 3
    },
    {
      "question_text": "Que fait 'use strict' en JavaScript ?",
      "option_a": "Active le mode strict",
      "option_b": "Empêche l'utilisation de variables non déclarées",
      "option_c": "Améliore la performance",
      "option_d": "Toutes les réponses ci-dessus",
      "correct_answer": "d",
      "points": 4
    },
    {
      "question_text": "Comment vérifier si une propriété existe dans un objet ?",
      "option_a": "obj.hasProperty('prop')",
      "option_b": "obj.hasOwnProperty('prop')",
      "option_c": "'prop' in obj",
      "option_d": "B et C sont correctes",
      "correct_answer": "d",
      "points": 4
    }
  ]
}
